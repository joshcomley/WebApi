// <auto-generated />
using System;
using AspNetCoreODataSample.Web.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace AspNetCoreODataSample.Web.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20181022195644_AddedPolygon")]
    partial class AddedPolygon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCoreODataSample.Web.Models.Movie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Genre");

                    b.Property<Point>("Point");

                    b.Property<Polygon>("PolygonDb");

                    b.Property<decimal>("Price")
                        .HasColumnType("NUMERIC");

                    b.Property<DateTimeOffset>("ReleaseDate");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("AspNetCoreODataSample.Web.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FavoriteMovieId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("MyLevel");

                    b.HasKey("ID");

                    b.HasIndex("FavoriteMovieId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("AspNetCoreODataSample.Web.Models.Person", b =>
                {
                    b.HasOne("AspNetCoreODataSample.Web.Models.Movie", "FavoriteMovie")
                        .WithMany("People")
                        .HasForeignKey("FavoriteMovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
